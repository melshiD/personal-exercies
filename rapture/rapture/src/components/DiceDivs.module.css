* {
    box-sizing: border-box;
    --die-width: 100px;
    --die-width-halved: calc(var(--die-width)/2);
    --trans-amount: var(--die-width-halved);
    --face-trans-amount: calc(var(--trans-amount) - 1px);
    /* --face-trans-amount: var(--trans-amount); */
    /* ( --face-trans-amount prevents the line between faces that shows through to other side )  */
}

.die {
    margin: calc(var(--die-width)/1.6);
    /* animation: roll 4s ease-in-out forwards; */
    transform-origin: var(--trans-amount) var(--trans-amount) var(--trans-amount);
    transform-style: preserve-3d;
    transform: translateY(-15px);
    /* transform: translateZ(var(--trans-amount)); */
}
.die:hover{
    /* animation: spin 2s linear infinite; */
}
.die-face {
    position: absolute;
    background-color: rgb(241, 227, 227);
    border-radius: 2px;
    width: var(--die-width);
    height: var(--die-width);
    border: 4px solid #403737;
    line-height: 2em;
    transform-style: preserve-3d;
    user-select: none;
}
.die-face:nth-child(1) {
    transform: translateZ(var(--face-trans-amount));
}

.die-face:nth-child(6) {
    transform: rotateY(90deg) translateZ(var(--face-trans-amount));
}

.die-face:nth-child(3) {
    transform: rotateY(-90deg) translateZ(var(--trans-amount));
}

.die-face:nth-child(4) {
    transform: rotateX(90deg) translateZ(var(--face-trans-amount));
}

.die-face:nth-child(5) {
    transform: rotateX(-90deg) translateZ(var(--face-trans-amount));
}

.die-face:nth-child(2) {
    transform: rotateY(-180deg) translateZ(var(--face-trans-amount));
}

@keyframes roll {
    20% {
        transform: rotateX(500deg) rotateZ(0) translateZ(var(--trans-amount));
    }

    30% {
        transform: rotateX(500deg) rotateZ(0) translateZ(var(--trans-amount));
    }

    50% {
        transform: rotateX(500deg) rotateZ(405deg) translateZ(var(--trans-amount));
    }

    90% {
        transform: rotateX(500deg) rotateZ(720deg) rotateY(360deg) translateZ(var(--trans-amount));
    }
    100%{
        transform: rotateX(720deg) rotateZ(720deg) rotateY(360deg) translateZ(var(--trans-amount));
    }
}
@keyframes spin {
    to{
        transform: translateY(-15px) rotateZ(360deg);
    }
}
@keyframes showingAnimation {
    to{
        transform: translateY(-15px) rotateZ(360deg);
    }
}
@media screen and (max-width: 700px){
    *{
        --die-width: 60px;
    }
}
@media screen and (max-width: 420px){
    *{
        --die-width: 54px;
    }
}
@media screen and (max-width: 400px){
    *{
        --die-width: 50px;
    }
}
@media screen and (max-width: 377px){
    *{
        --die-width: 48px;
    }
}
.showing{
    animation: showingAnimation 2s linear 0.5s forwards;
}